#!/usr/bin/env python3
"""
Test de la classe Mosaic simplifi√©e sans session_dirs.
"""

import tempfile
import logging
from pathlib import Path
from lib.mosaic import Mosaic

def test_simplified_mosaic():
    """Test la nouvelle API simplifi√©e de Mosaic."""
    
    logging.basicConfig(level=logging.INFO)
    
    with tempfile.TemporaryDirectory() as temp_dir:
        temp_path = Path(temp_dir)
        
        # Cr√©er quelques fichiers de test
        input_files = []
        for i in range(3):
            test_file = temp_path / f"session_M31_panel_{i}_stacked.fits"
            test_file.write_text(f"FAKE FITS DATA FOR SESSION {i}")
            input_files.append(test_file)
        
        # R√©pertoires de sortie et de travail
        output_dir = temp_path / "output"
        work_dir = temp_path / "work"
        
        try:
            print("=== Test de la nouvelle API Mosaic simplifi√©e ===")
            
            # Cr√©er la mosa√Øque avec la nouvelle API
            mosaic = Mosaic(
                output_dir=output_dir,
                work_dir=work_dir,
                mosaic_name="M31_complete",
                input_files=input_files
            )
            
            print(f"‚úÖ Mosa√Øque cr√©√©e: {mosaic.mosaic_name}")
            print(f"‚úÖ Fichiers d'entr√©e: {len(mosaic.input_files)}")
            
            # Pr√©parer les fichiers
            prepared_files = mosaic.prepare_input_files()
            print(f"‚úÖ Fichiers pr√©par√©s: {len(prepared_files)}")
            
            for prepared_file in prepared_files:
                assert prepared_file.exists(), f"Fichier manquant: {prepared_file}"
                print(f"  - {prepared_file.name}")
            
            # V√©rifier le script g√©n√©r√©
            script_content = mosaic._generate_mosaic_script(prepared_files)
            assert "M31_complete" in script_content, "Le nom de mosa√Øque devrait √™tre dans le script"
            print(f"‚úÖ Script g√©n√©r√© ({len(script_content.splitlines())} lignes)")
            
            print("‚úÖ Test de l'API simplifi√©e r√©ussi")
            return True
            
        except Exception as e:
            print(f"‚ùå Erreur: {e}")
            import traceback
            traceback.print_exc()
            return False

if __name__ == "__main__":
    print("Test de la classe Mosaic simplifi√©e...")
    success = test_simplified_mosaic()
    if success:
        print("\nüåü La nouvelle API Mosaic simplifi√©e fonctionne parfaitement !")
        print("Plus besoin de session_dirs, seulement les fichiers explicites.")
    else:
        print("\nüí• La nouvelle API a √©chou√©")
        exit(1)